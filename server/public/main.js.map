{"version":3,"sources":["./src/app/auth,guard.ts","./src/app/news-page/news-page.component.html","./src/app/news-page/news-page.component.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/stock-data.service.ts","./src/environments/environment.ts","./src/app/graph-page/graph-page.component.ts","./src/app/graph-page/graph-page.component.html","./src/app/auth-service.service.ts","./src/app/news-modifier.pipe.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/profile/profile.component.html","./src/app/profile/profile.component.ts","./src/app/app.module.ts","./src/app/register-page/register-page.component.html","./src/app/register-page/register-page.component.ts","./src/app/login-page/login-page.component.ts","./src/app/login-page/login-page.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthServiceService } from './auth-service.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor (private authService:AuthServiceService, private router:Router){\n\n  }\n\n  canActivate() {\n    if(this.authService.loggedIn()) {\n      return true;\n    } else {\n      this.router.navigate(['login']);\n      return false;\n    }\n  }\n}","<div class=\"container\">\n    <div class=\"row search\">\n        <span class=\"search-space\">\n            <input [(ngModel)]=\"query\" class=\"form-control\" placeholder=\"IBM\">\n        </span>\n        <span class=\"search-space\">\n            <button (click)=\"search()\" placeholder=\"Topic\" class=\"btn btn-primary mb-2\">Search</button>\n        </span>\n    </div>\n    <div class=\"row news-holder\" *ngFor=\"let strip of all_news | newsModifier\">\n        <div class=\"col-md\" *ngFor=\"let news_obj of strip\">\n            <div class=\"card\" >\n                <img class=\"card-img-top\" src=\"{{ news_obj.urlToImage }}\" alt=\"Card image\" style=\"width:100%\">\n                <div class=\"card-body\">\n                <h4 class=\"card-title\">{{ news_obj.title }}</h4>\n                <p class=\"card-text\">{{ news_obj.description }}</p>\n                <a href=\"{{ news_obj.url }}\" class=\"btn btn-primary\">Click for more</a>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from \"@angular/common\";\nimport { news } from '../structures';\nimport {StockDataService} from '../stock-data.service';\n\n@Component({\n  selector: 'app-news-page',\n  templateUrl: './news-page.component.html',\n  styleUrls: ['./news-page.component.css']\n})\nexport class NewsPageComponent implements OnInit {\n  all_news: news[] = [];\n  constructor(private stockService: StockDataService) { }\n\n  ngOnInit(): void {\n    this.getData();\n  }\n\n  getData(): void {\n    const _this = this;\n    this.stockService.getNewsData(this.query)\n        .subscribe(values => {\n            this.all_news = values.newsholder;\n          }\n        ); \n  }\n  query='IBM';\n\n  search(): void {\n    this.getData();\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"con\">\n    <div class=\"row partition\">\n        <div class=\"col-md-6\">\n            <p class=\"header\">Market Corner</p>\n            <p description=\"sub-header\"> One stop solution fo all your trading needs </p>\n        </div>\n        <div class=\"col-md-6 img-container\">\n\n            \n        </div>\n\n    </div>\n\n    <div class=\"feature-container container\">\n        <div class=\"row justify-content-around\">\n            <span class=\"feature-header\"> Features </span>\n        </div>\n        <div class=\"row cloud\">\n            <div class=\"col-lg-6\">\n                <img class = \"feature-img\" src=\"assets/news.svg\" height=\"400px\"/>\n            </div>\n            <div class=\"col-lg-6\">\n                <p class =\" feature-text\"> Get the latest news at your fingertips!</p>\n            </div>\n        </div>\n        <div class=\"description\">\n            <p>People who act the first in market are the ones who rule the market as well and a lot of financial decisions are driven by news. Market Corner provides you the facility to read the latest news on any topic and provides news from vast colleciton of sources.</p>\n\n        </div>\n        <div class=\"row cloud\">\n            <div class=\"col-lg-6\">\n                <p class =\" feature-text\"> Get complete latest info on all stocks</p>\n            </div>\n            <div class=\"col-lg-6\">\n                <img class = \"feature-img\" src=\"assets/stock1.svg\" height=\"400px\"/>\n            </div>\n        </div>\n        <div class=\"description\">\n            <p>Market Corner provides you all the information that might be required by an investor before making any decision. All the information from the backround of the company to the annual earnings are at the disposal of users.</p>\n             \n        </div>\n        <div class=\"row cloud\">\n            \n            <div class=\"col-lg-6\">\n                <img class = \"feature-img\" src=\"assets/stock2.svg\" height=\"400px\"/>\n            </div>\n            <div class=\"col-lg-6\">\n                <p class =\" feature-text\">Advanced Candle Stick Charts to help your Analysis.</p>\n            </div>\n        </div>\n        <div class=\"description\">\n            <p>Apart from just providing information Market Corner also provides advanced Candle Stick Charts of the stock for people who might want to do analysis.</p>\n             \n        </div>\n\n        <div class=\"bottom\">\n            <p>\n                Before taking any decision about investment please make sure you understand how market functions and all related risks properly.<br>\n                You might want to take a loot at <a href=\"https://www.forbes.com/sites/garymishuris/2019/12/03/10-important-questions-to-consider-before-investing-in-a-company/\"> this </a> and <a href=\"https://www.etmoney.com/blog/5-things-you-should-do-before-investing-money/\"> this </a>\n            </p>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { series, companyData, newsData } from './structures';\n\nimport { HttpClient} from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class StockDataService {\n\n  constructor(private http: HttpClient) { }\n\n  getSeries(ticker: string) {\n    console.log(ticker);\n    return this.http.get<series>('https://marketcornerbackend.herokuapp.com/api/series/'+ticker) ;\n\n    \n  }\n\n  getCompanyData(ticker: string) {\n    console.log(ticker);\n    return this.http.get<companyData>('https://marketcornerbackend.herokuapp.com/api/overview/'+ticker);\n  }\n\n  getNewsData(query: string) {\n    return this.http.get<newsData>('https://marketcornerbackend.herokuapp.com/news/'+query);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from \"@angular/core\";\n\nimport {StockDataService} from '../stock-data.service';\n\nimport {\n  ChartComponent,\n  ApexAxisChartSeries,\n  ApexChart,\n  ApexYAxis,\n  ApexXAxis,\n  ApexTitleSubtitle\n} from \"ng-apexcharts\";\n\nexport type ChartOptions = {\n  series: ApexAxisChartSeries;\n  chart: ApexChart;\n  title: ApexTitleSubtitle;\n  xaxis: ApexXAxis;\n  yaxis: ApexYAxis;\n  \n};\n\n@Component({\n  selector: 'app-graph-page',\n  templateUrl: './graph-page.component.html',\n  styleUrls: ['./graph-page.component.css']\n})\nexport class GraphPageComponent implements OnInit {\n  title = 'Market Corner';\n  constructor(private stockService: StockDataService) {}\n\n  ngOnInit() {\n    this.getData();\n  }\n\n  getData(): void {\n    const _this = this;\n    this.stockService.getSeries(this.ticker)\n        .subscribe(values => {\n            this.chartOptions.series = [\n              {\n                data:  values.series.map(ele => ({\n                    x: new Date(ele.timestamp),\n                    y: [ele.open,ele.high,ele.low,ele.close]\n                  })\n                )\n              }\n            ]\n          }\n        ); \n    this.stockService.getCompanyData(this.ticker)\n        .subscribe(companyData => {\n          this.companyName = companyData.name;\n          this.companyDescription = companyData.description;\n          this.companyCurrency = companyData.currency;\n          this.companyExchange = companyData.exchange;\n          this.companySector = companyData.sector;\n          this.earningsOptions.series = [\n            {\n              data: companyData.earnings.map(ele => ({\n                x: new Date(ele.fiscalDateEnding),\n                y: ele.reportedEPS\n              })\n              )\n            }\n          ]\n        }\n      );\n  }\n\n\n  search(): void {\n    this.getData();\n  }\n  companyName: string=\"\";\n  companyDescription=\"\";\n  companySector=\"\";\n  companyExchange=\"\";\n  companyCurrency=\"\";\n  ticker=\"IBM\";\n  chart: ChartComponent = new ChartComponent;\n  chartOptions: ChartOptions = {\n    series: [\n      {\n        name: \"candle\",\n        data: [\n          \n          \n        ]\n      }\n    ],\n    chart: {\n      type: \"candlestick\",\n      height: 500\n    },\n    title: {\n      text: \"CandleStick Chart\",\n      align: 'left'\n    },\n    xaxis: {\n      type: 'datetime'\n    },\n    yaxis: {\n      tooltip: {\n        enabled: true\n      }\n    }\n  };\n\n  earningsOptions: ChartOptions = {\n    series: [\n      {\n      name: \"EPS:\",\n      data: [\n      ]\n  }],\n      chart: {\n      type: 'area',\n      height: 400,\n      zoom: {\n      enabled: false\n      }\n  },\n  title: {\n      text: 'Annual Earnings',\n      align: 'center'\n  },\n  xaxis: {\n      type: 'datetime',\n  },\n  yaxis: {\n      opposite: true\n  },\n  };\n\n\n\n  public generateDayWiseTimeSeries(baseval: number, count: number, yrange: { max: number; min: number; }) {\n    var i = 0;\n    var series = [];\n    while (i < count) {\n      var y =\n        Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n\n      series.push([baseval, y]);\n      baseval += 86400000;\n      i++;\n    }\n    return series;\n  }\n\n}\n","<!--The content below is only a placeholder and can be replaced.-->\n\n<div class=\"container \" >\n  <div class=\"row search\">\n        <span class=\"search-space\">\n            <input [(ngModel)]=\"ticker\" class=\"form-control\" placeholder=\"Code\">\n        </span>\n        <span class=\"search-space\">\n            <button (click)=\"search()\" placeholder=\"Topic\" class=\"btn btn-primary mb-2\">Search</button>\n        </span>\n    </div>\n\n\n\n  <div style=\"text-align: center\">\n    <p>{{ticker}}</p>\n  </div>\n  <div style=\"background: lightgrey;\">\n    <apx-chart\n      [series]=\"chartOptions.series\"\n      [chart]=\"chartOptions.chart\"\n      [xaxis]=\"chartOptions.xaxis\"\n      [yaxis]=\"chartOptions.yaxis\"\n      [title]=\"chartOptions.title\"\n    ></apx-chart>\n  </div>\n  <div style=\"margin-top:50px;font-size:40px;font-weight:bold;text-align:center;\">\n    <p>{{companyName}}</p>\n  </div>\n  <div class=\"row d-flex justify-content-around\">\n    <div class=\"col-md-4 \" >\n        <p class=\"bg-success pill\" >Exchange: {{companyExchange}}</p>\n    </div>\n    <div class=\"col-md-4\">\n        <p class=\"bg-warning pill\" >Currency: {{companyCurrency}}</p>\n    </div>\n    <div class=\"col-md-4\">\n        <p class=\"bg-info pill\" >Sector: {{companySector}}</p>\n    </div>\n  </div>\n  <div style=\"margin-top:30px;font-size:15px;font-weight:500;\">\n    <p>{{companyDescription}}</p>\n  </div>\n  <div style=\"margin-top:100px\">\n    <apx-chart\n      [series]=\"earningsOptions.series\"\n      [chart]=\"earningsOptions.chart\"\n      [xaxis]=\"earningsOptions.xaxis\"\n      [yaxis]=\"earningsOptions.yaxis\"\n      [title]=\"earningsOptions.title\"\n    ></apx-chart>\n  \n  </div>\n    \n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User } from './register-page/register-page.component';\nimport { creds, loggedInUser } from './login-page/login-page.component';\nimport { Router } from '@angular/router';\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthServiceService {\n  authToken: any = \"\";\n  user:any;\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  registerUser(user:User){\n    return this.http.post<any>('https://marketcornerbackend.herokuapp.com/users/register', user);\n  }\n\n  authenticateUser(creds: creds) {\n    return this.http.post<any>('https://marketcornerbackend.herokuapp.com/users/authenticate', creds);\n  }\n\n  storeUserData(token: string, user: loggedInUser) {\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  loggedIn() {\n    return !!localStorage.getItem('id_token')    \n  }\n\n  logoutUser() {\n    localStorage.removeItem('id_token')\n    localStorage.removeItem('user')\n    this.router.navigate(['login'])\n  }\n\n  updateUser(changeUser:any) {\n    this.loadToken();\n    let headers = new HttpHeaders()\n    .set('Authorization', this.authToken)\n    \n    console.log(headers);\n    return this.http.post<any>('https://marketcornerbackend.herokuapp.com/users/update', changeUser, {headers: headers});\n    \n  }\n\n  loadToken() {\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n  }\n\n  deleteUser(id:string) {\n    this.loadToken();\n    let headers = new HttpHeaders()\n    .set('Authorization', this.authToken)\n    return this.http.post('https://marketcornerbackend.herokuapp.com/users/deleteye', {\"id\":id}, {headers: headers});\n\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { news } from './structures';\n/*\n * Raise the value exponentially\n * Takes an exponent argument that defaults to 1.\n * Usage:\n *   value | exponentialStrength:exponent\n * Example:\n *   {{ 2 | exponentialStrength:10 }}\n *   formats to: 1024\n*/\n@Pipe({name: 'newsModifier'})\nexport class NewsModifierPipe implements PipeTransform {\n    transform(value: news[]): news[][] {\n        console.log('inside pipe',value);\n        let values: news[][] = [];\n        let ind=0;\n        for (var pointer in value) {\n            if (ind==0) {\n                values.push([]);\n            }\n            values[values.length-1].push(value[pointer]);\n            ind+=1;\n            if (ind==2) {\n                ind=0;\n            }\n        }\n        console.log(values)\n        return values\n    \n    }\n}","<nav class=\"navbar navbar-expand-md navbar-light bg-light partition\">\n    <a href=\"#\" class=\"navbar-brand\">\n        Market Corner\n    </a>\n    <button type=\"button\" class=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n        <div class=\"navbar-nav\">\n            <a routerLink=\"/home\" routerLinkActive=\"active\" class=\"nav-item nav-link\">Home</a>\n            <a routerLink=\"/analyse\" routerLinkActive=\"active\" class=\"nav-item nav-link\">Stock Analyzer</a>\n            <a routerLink=\"/news\" routerLinkActive=\"active\" class=\"nav-item nav-link\">News</a>\n        </div>\n        <div class=\"navbar-nav ml-auto\">\n            <a *ngIf=\"authservice.loggedIn()\" routerLink=\"/profile\" routerLinkActive=\"active\" class=\"nav-item nav-link\" style=\"border: 2px solid black; border-radius: 50%; width:44px; text-align: center;\"><i class=\"fa fa-user\"></i></a>\n            <a *ngIf=\"!authservice.loggedIn()\" routerLink=\"/login\" routerLinkActive=\"active\" class=\"nav-item nav-link\">Login</a>\n            <a *ngIf=\"!authservice.loggedIn()\" routerLink=\"/register\" routerLinkActive=\"active\" class=\"nav-item nav-link\">Register</a>\n            <a *ngIf=\"authservice.loggedIn()\" routerLinkActive=\"active\" (click)=\"authservice.logoutUser()\" class=\"nav-item nav-link\">Logout</a>\n        </div>\n    </div>\n</nav>\n\n \n<!-- The routed views render in the <router-outlet>-->\n<router-outlet></router-outlet>","import { Component} from \"@angular/core\";\nimport { AuthServiceService } from \"./auth-service.service\";\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"]\n})\nexport class AppComponent {\n  constructor(public authservice: AuthServiceService){}\n}\n","<br>\n\n<div *ngIf=\"!editable\" class=\"container d-flex justify-content-around\" >\n    <div class=\"col-8\">\n        <h2> User Profile    <i class=\"fa fa-user\"></i></h2>\n        <br>\n        <p> Name :  {{user.name | titlecase}} </p>\n        <br>\n        <p> Email :  {{user.email}}</p>\n        <br>\n        <p> Phone :  {{user.phone}} </p>\n        <br>\n        <div class=\"row d-flex justify-content-end button-holder\">\n            <button class=\"btn btn-primary\" (click)=\"toggleEdit()\"> Edit </button>\n            <span style=\"margin-left: 20px;\"> </span>\n            <button class=\"btn btn-danger\" (click)=\"delete()\"> Delete Account </button>\n        </div>\n    </div>\n</div>\n<div *ngIf=\"editable\" class=\"container d-flex justify-content-around\" >\n    <div class=\"col-8\">\n        <h2> User Profile    <i class=\"fa fa-user\"></i></h2>\n        <br>\n        <p> Name   <input type=\"text\" name=\"name\" value=\"{{formUser.name | titlecase}}\" class=\"form-control\" [(ngModel)]=\"formUser.name\"> </p>\n        <br>\n        <p> Email   <input type=\"text\" name=\"email\" value=\"{{formUser.email }}\" class=\"form-control\" [(ngModel)]=\"formUser.email\"></p>\n        <br>\n        <p> Phone   <input type=\"text\" name=\"phone\" value=\"{{formUser.phone }}\" class=\"form-control\" [(ngModel)]=\"formUser.phone\"> </p>\n        <br>\n        <div class=\"row d-flex justify-content-end button-holder\">\n            <button class=\"btn btn-danger\" (click)=\"toggleEdit()\"> Cancel </button>\n            <span class=\"spacer\"> </span>\n            <button class=\"btn btn-primary\" (click)=\"submit()\"> Change </button>\n        </div>\n\n    </div>\n</div>","import { TitleCasePipe } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthServiceService } from '../auth-service.service';\nimport { loggedInUser } from '../login-page/login-page.component';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(private authservice: AuthServiceService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n  stringuser:any = localStorage.getItem('user');\n  user = JSON.parse(this.stringuser);\n  editable = false;\n\n  toggleEdit() {\n    this.editable = !this.editable;\n  }\n  formUser = {\n    name: this.user.name ,\n    email: this.user.email,\n    phone: this.user.phone\n  }\n  submit() {\n    var id = this.user.id\n    this.user = this.formUser;\n    this.user.id = id;\n    console.log(this.formUser);\n    console.log(this.user);\n    localStorage.setItem('user', JSON.stringify(this.user));\n    this.authservice.updateUser(this.user).subscribe(data => {})\n    this.editable = !this.editable;    \n\n\n  }\n\n  delete() {\n    var id = this.user.id;\n    console.log('function');\n    console.log(id);\n    this.authservice.deleteUser(id).subscribe(data => {});\n    localStorage.removeItem('id_token');\n    localStorage.removeItem('user');\n    this.router.navigate(['register']);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\nimport { NgApexchartsModule } from \"ng-apexcharts\";\nimport { GraphPageComponent } from './graph-page/graph-page.component';\nimport { HomeComponent } from './home/home.component';\nimport { NewsPageComponent } from './news-page/news-page.component';\nimport { NewsModifierPipe } from './news-modifier.pipe';\nimport { RegisterPageComponent } from './register-page/register-page.component';\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { AuthGuard } from './auth,guard';\nimport { RouterModule } from '@angular/router';\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GraphPageComponent,\n    HomeComponent,\n    NewsPageComponent,\n    NewsModifierPipe,\n    RegisterPageComponent,\n    LoginPageComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    NgApexchartsModule,\n    RouterModule\n  ],\n  providers: [AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div class=\"container\">\n    <form #userForm=\"ngForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"row justify-content-around\">\n            <div *ngIf=\"success\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n                <strong>Success!</strong> You are now registered and you can proceed to login.\n                <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div *ngIf=\"failure\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n                <strong>Error!</strong> {{message}}\n                <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n        </div>\n        <br>\n        <label>Name</label>\n        <input class=\"trial\" type=\"text\" required #name=\"ngModel\" [class.is-valid]=\"name.valid && name.dirty\" [class.is-invalid]=\"name.invalid && name.touched\" class=\"form-control\" name=\"name\" [(ngModel)]=\"user.name\" value=\"{{user.name | titlecase}}\">\n        <br>\n        <label>Email</label>\n        <input type=\"email\" required #email=\"ngModel\" [class.is-valid]=\"email.valid && email.dirty\" [class.is-invalid]=\"email.invalid && email.touched\" class=\"form-control\" name=\"email\" [(ngModel)]=\"user.email\">\n        <br>\n        <label>Password</label>\n        <input type=\"password\" required #password=\"ngModel\" [class.is-valid]=\"password.valid && password.dirty\" [class.is-invalid]=\"password.invalid && password.touched\" class=\"form-control\" name=\"password\" [(ngModel)]=\"user.password\">\n        <br>\n        <label>Phone</label>\n        <input type=\"text\" required #phone=\"ngModel\" [class.is-valid]=\"phone.valid && phone.dirty\" [class.is-invalid]=\"phone.invalid && phone.touched\" class=\"form-control\" name=\"phone\" [(ngModel)]=\"user.phone\">\n        \n        <br>\n        <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"userForm.form.invalid \"> Submit </button>\n    \n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthServiceService } from '../auth-service.service';\nimport { CommonModule } from '@angular/common';  \n\nexport interface User {\n  name : string,\n  email : string,\n  password : string,\n  phone : number\n}\n\n\n@Component({\n  selector: 'app-register-page',\n  templateUrl: './register-page.component.html',\n  styleUrls: ['./register-page.component.css']\n})\n\n\n\nexport class RegisterPageComponent implements OnInit {\n\n  constructor(private authservice: AuthServiceService) { }\n\n  ngOnInit(): void {\n  }\n  user: User = {\n    name : 'your name',\n    email : \"example@email.com\",\n    password : \"password\",\n    phone : 123456789\n  };\n\n  success= false;\n  failure=false;\n  message=\"\"\n  onSubmit () {\n    console.log(this.user);\n    this.authservice.registerUser(this.user).subscribe(values => {\n      console.log(values);\n      if (values.success) {\n        console.log(values.success);\n        this.success=true;\n        this.failure=false;\n      }\n      else {\n        this.failure=true;\n        this.success=false;\n        this.message = values.msg;\n      }\n      \n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthServiceService } from '../auth-service.service';\nimport { Router } from '@angular/router';\n\nexport interface loggedInUser {\n  name : string,\n  email : string,\n  phone : number\n}\n\nexport interface creds {\n  email : string,\n  password : string\n}\n\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.css']\n})\nexport class LoginPageComponent implements OnInit {\n\n  constructor(private authservice: AuthServiceService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n  creds: creds = {\n    email : \"example@email.com\",\n    password : \"password\",\n  }\n\n  onLoginSubmit() {\n    \n\n    this.authservice.authenticateUser(this.creds).subscribe(data => {\n        if(data.success) {\n          console.log(data);\n          this.authservice.storeUserData(data.token, data.user);\n          //this.flashMessage.show('You are now logged in', {cssClass: 'alert-success', timeout: 5000});\n          this.router.navigate(['home']);\n        } else {\n          //this.flashMessage.show(data.msg, {cssClass: 'alert-danger', timeout: 5000});\n          //this.router.navigate(['login']);\n        }\n    });\n  }\n}\n","<div class=\"container\">\n    <form #loginForm=\"ngForm\" (ngSubmit)=\"onLoginSubmit()\">\n\n        <label>Email</label>\n        <input type=\"email\" required #email=\"ngModel\" [class.is-valid]=\"email.valid && email.dirty\" [class.is-invalid]=\"email.invalid && email.touched\" class=\"form-control\" name=\"email\" [(ngModel)]=\"creds.email\">\n        <br>\n        <label>Password</label>\n        <input type=\"password\" required #password=\"ngModel\" [class.is-valid]=\"password.valid && password.dirty\" [class.is-invalid]=\"password.invalid && password.touched\" class=\"form-control\" name=\"password\" [(ngModel)]=\"creds.password\">\n        <br>\n        <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"loginForm.form.invalid \"> Submit </button>\n    \n    </form>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { GraphPageComponent } from './graph-page/graph-page.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport { NewsPageComponent } from './news-page/news-page.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { RegisterPageComponent } from './register-page/register-page.component';\nimport { AuthGuard } from './auth,guard'\n\nconst routes: Routes = [\n  { path: 'analyse', component: GraphPageComponent, canActivate:[AuthGuard] },\n  { path: 'news', component: NewsPageComponent, canActivate:[AuthGuard]},\n  { path: 'home', component: HomeComponent},\n  { path: 'register', component: RegisterPageComponent},\n  { path: 'login', component: LoginPageComponent},\n  { path: 'profile', component: ProfileComponent, canActivate:[AuthGuard]},\n  { path: '', redirectTo: '/home', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}